// EditQuestionForm.jsx
import React from 'react';
import { useForm } from 'react-hook-form';

const EditQuestionForm = ({ onSubmit, selectedQuestion, onCancel }) => {
  const { handleSubmit, register, setValue, reset } = useForm();

  React.useEffect(() => {
    if (selectedQuestion) {
      setValue('mainQuestion', selectedQuestion.mainQuestion);
      setValue('answer', selectedQuestion.answer);
      setValue('actionToRun', selectedQuestion.actionToRun);

      if (selectedQuestion.variations) {
        setValue('variations', selectedQuestion.variations);
      }
    }
  }, [selectedQuestion, setValue]);

  return (
    <form onSubmit={handleSubmit(onSubmit)} className="mt-8">
      {/* Form fields go here... */}

      <button
        type="button"
        className="bg-gray-500 text-white p-2 mx-1"
        onClick={() => {
          reset();
          onCancel(); // Trigger onCancel function to handle cancel/reset
        }}
      >
        Cancel
      </button>
      <button type="submit" className="bg-blue-500 text-white p-2 mx-1">
        Save Changes
      </button>
    </form>
  );
};

export default EditQuestionForm;



// AdminPage.jsx
import React, { useState } from 'react';
import QuestionForm from './QuestionForm';
import EditQuestionForm from './EditQuestionForm';

const AdminPage = () => {
  const [selectedQuestion, setSelectedQuestion] = useState(null);

  const handleEdit = (questionId) => {
    // Logic to fetch the selected question
    setSelectedQuestion(selectedQuestionData);
  };

  const handleCancelEdit = () => {
    setSelectedQuestion(null);
  };

  return (
    <div className="container mx-auto p-4">
      {/* Other content... */}

      {selectedQuestion ? (
        <EditQuestionForm onSubmit={yourEditSubmitFunction} selectedQuestion={selectedQuestion} onCancel={handleCancelEdit} />
      ) : (
        <QuestionForm onSubmit={yourAddSubmitFunction} />
      )}
    </div>
  );
};

export default AdminPage;

