var dynamoDBClient = new AmazonDynamoDBClient();
var context = new DynamoDBContext(dynamoDBClient);

// Construct the QueryRequest
var queryRequest = new QueryRequest
{
    TableName = "YourTableName",
    KeyConditionExpression = "PK = :pk AND begins_with(SK, :skPrefix)",
    ExpressionAttributeValues = new Dictionary<string, AttributeValue>
    {
        { ":pk", new AttributeValue { S = "YourPKValue" } },
        { ":skPrefix", new AttributeValue { S = "YourSKPrefix" } },
        { ":startDate", new AttributeValue { S = "2023-09-01" } },  // Adjust date as necessary
        { ":endDate", new AttributeValue { S = "2023-09-30" } }    // Adjust date as necessary
    },
    FilterExpression = "DateAttribute BETWEEN :startDate AND :endDate"
};

// Execute the query
var queryResponse = await dynamoDBClient.QueryAsync(queryRequest);

// Deserialize the results into your model class
var items = context.FromDocuments<YourModel>(queryResponse.Items);







var queryRequest = new QueryRequest
{
    TableName = "YourTableName",
    KeyConditionExpression = "PK = :pk AND begins_with(SK, :skPrefix)",
    ExpressionAttributeValues = new Dictionary<string, AttributeValue>
    {
        { ":pk", new AttributeValue { S = "YourPKValue" } },
        { ":skPrefix", new AttributeValue { S = "YourSKPrefix" } }
    },
    ProjectionExpression = "SK, DateAttribute, Status" // Only retrieve these attributes
};

var queryResponse = await dynamoDBClient.QueryAsync(queryRequest);









var dynamoDBClient = new AmazonDynamoDBClient();

// Construct the ScanRequest
var scanRequest = new ScanRequest
{
    TableName = "YourTableName",
    // Use FilterExpression to limit the items that will be returned
    FilterExpression = "Status = :status",
    ExpressionAttributeValues = new Dictionary<string, AttributeValue>
    {
        { ":status", new AttributeValue { S = "Active" } }
    }
};

// Execute the Scan
var scanResponse = await dynamoDBClient.ScanAsync(scanRequest);

// Process the scan result
foreach (var item in scanResponse.Items)
{
    // Do something with each item
    Console.WriteLine($"Item: {item["PK"].S}, Status: {item["Status"].S}");
}
